
/* Variables in CSS should be declared within a CSS selector that defines its scope. 
For a global scope you can use either the :root or the body selector.
- The variable name must begin with two dashes (--) and is case sensitive!
-var(custom-name, value) 
*/

:root{
  --font-famlily: Georgia;
}

/* The ::selection selector matches the portion of an element that is selected by a user.
Only a few CSS properties can be applied to the ::selection selector: color, background, cursor, and outline.
 */
::selection
{
  background-color: teal;
  color: white;
}

* {
  margin: 0;
  padding: 0; 
  border-box: box-sizing; 
}

label {
    text-align: left;
    display: block;
    font-family: var(--font-famlily);
    color: teal;
}

.form-control input[type="text"], .form-control input[type="password"] {
  background-color: red  !important;
}

.customDate{
  width: 40%;
}

body{
  background-color: grey lighten-2;
  font-family: var(--font-famlily);
}

footer{
  font-family: var(--font-famlily);
}

.navbar {
  padding: 1.5rem 3rem;
}

.inner{
  overflow: hidden;
}
.inner img{
    transition: all 1.5s ease;
}

.inner:hover img{
  transform: scale(1.5);
}

.nav-item a:hover {
  background-color:rgb(238, 106, 17);
  color: white;
  border-color: #00AADC;
  margin: 0px;
  z-index: 10;
  font-size: 1.15vw;
  box-shadow: 0px 7.5px 7.5px #93AAB6;
}

.logoText{
  background-color: rgb(238, 106, 17);
  color: white;
  border-color: #00AADC;
  margin: 0px;
  z-index: 10;
  box-shadow: 0px 7.5px 7.5px #93AAB6;
  padding: 5px;
  text-shadow: 2px 2px lightseagreen;
}

button.btn-default :hover {
  background-color:rgb(238, 106, 17);
  color: white;
  border-color: #00AADC;
  margin: 0px;
  z-index: 10;
  font-size: 1.15vw;
  box-shadow: 0px 7.5px 7.5px #93AAB6;
}

/* WebKit desktop browsers add little up down arrows to number inputs called spinners. 
You can turn them off visually like this */
input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button { 
  -webkit-appearance: none; 
  margin: 0; 
}

/* Desktop  and ipad view: “If [device width] is greater than or equal to 769px, then do {…}*/
@media screen and (min-width: 769px) {
	.patientForm {
		width: 50%;
    }
    
/* Tablet screen */
@media screen and (max-width: 700px) {
  .patientForm {
    width: 50%;
  }
}

/* Mobile screen */
@media screen and (max-width: 480px) {
  .patientForm {
    width: 100%;
  }
}